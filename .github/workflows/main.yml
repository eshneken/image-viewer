
name: Deploy Image Viewer

on:
  # on push to main branch
  push:
    branches:
      - main
  # Allow manual trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - name: Get or create an OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.3.0
        id: get-ocir-repository
        with:
          name: ${{vars.K8S_DOCKER_IMAGE_PATH}}
          compartment: ${{ vars.OCI_COMPARTMENT_OCID }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.3.0
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Build and tag and push docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: "{{defaultContext}}"
          tags: "${{ steps.get-ocir-repository.outputs.repo_path }}:latest"
          platforms: linux/amd64 

  deploy:
      needs: build
      runs-on: ubuntu-latest
      name: Deploy to OKE
      env:
        OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
        OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
        OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
        OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
        OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
      steps:
        - name: Configure Kubectl
          uses: oracle-actions/configure-kubectl-oke@v1.5.0
          with:
            cluster: ${{ vars.K8S_CLUSTER_OCID }}
            enablePrivateEndpoint: false
  
        - name: Run Kubectl
          run: |
            kubectl get nodes -A
